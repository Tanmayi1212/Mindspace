'use client';

import { useSession } from 'next-auth/react';
import dynamic from 'next/dynamic';
import Link from 'next/link';

const Bell = dynamic(() => import('lucide-react').then((mod) => mod.Bell), { ssr: false });
const Settings = dynamic(() => import('lucide-react').then((mod) => mod.Settings), { ssr: false });

export default function Navbar() {
  const { data: session } = useSession();

  return (
    <header className="sticky top-0 left-0 w-full z-40 shadow-sm flex items-center justify-between px-6 h-16 bg-white dark:bg-[#23272f]">
      <div className="flex items-center gap-4">
        <button className="p-2 rounded bg-[#3b7a57] dark:bg-[#3b7a57] text-white hover:bg-[#2e5d43] transition" aria-label="Notifications">
          {Bell && <Bell size={20} />}
        </button>
        <Link href="/settings" className="p-2 rounded bg-[#3b7a57] dark:bg-[#3b7a57] text-white hover:bg-[#2e5d43] transition" aria-label="Settings">
          {Settings && <Settings size={20} />}
        </Link>
      </div>
      <div className="flex-1 flex items-center justify-center gap-4">
        {session ? (
          <>
            <Link href="/journal" className="px-6 py-2 rounded bg-[#3b7a57] dark:bg-[#3b7a57] text-white font-semibold transition">
              Journal
            </Link>
            <Link href="/journal/new" className="px-6 py-2 rounded bg-[#3b7a57] dark:bg-[#3b7a57] text-white font-semibold transition">
              New Entry
            </Link>
            <Link href="/analyze" className="px-6 py-2 rounded bg-[#3b7a57] dark:bg-[#3b7a57] text-white font-semibold transition">
              AI Reflection
            </Link>
            <Link href="/settings" className="px-6 py-2 rounded bg-[#3b7a57] dark:bg-[#3b7a57] text-white font-semibold transition">
              Settings
            </Link>
            <Link href="/logout" className="px-6 py-2 rounded bg-[#2e5d43] dark:bg-[#f6b93b] text-white dark:text-[#23272f] font-semibold transition">
              Logout
            </Link>
          </>
        ) : (
          <>
            <Link href="/signup" className="px-6 py-2 rounded bg-[#5cbf7c] dark:bg-[#5cbf7c] text-white font-semibold transition">
              Sign Up
            </Link>
            <Link href="/signin" className="px-6 py-2 rounded bg-[#3b7a57] dark:bg-[#3b7a57] text-white font-semibold transition">
              Sign In
            </Link>
          </>
        )}
      </div>
    </header>
  );
}

/*
  Note on Hydration Errors:
  The "hydration error" often occurs when the server-rendered HTML (from Next.js)
  does not exactly match the HTML generated by the client-side React code.
  Third-party scripts, like browser extensions (e.g., Grammarly), can inject
  elements into the DOM after the page loads but before React hydrates,
  causing this mismatch.

  While dynamically importing icons in this Navbar helps ensure this component
  is client-rendered, if the Grammarly error persists, it's likely due to
  Grammarly itself modifying the DOM. For debugging, you might consider
  disabling such extensions temporarily to see if the hydration error resolves.
*/